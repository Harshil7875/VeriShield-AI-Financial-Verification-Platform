services:
  postgres:
    image: postgres:15
    container_name: veri_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=verishield_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # Healthcheck to make Postgres “healthy” only after it's fully ready:
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  neo4j:
    image: neo4j:5
    container_name: veri_neo4j
    restart: unless-stopped
    environment:
      - NEO4J_AUTH=neo4j/secret123
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data

  backend:
    build: ./backend
    container_name: veri_backend
    restart: unless-stopped

    # IMPORTANT: Wait for Postgres to be “healthy” before starting
    depends_on:
      postgres:
        condition: service_healthy
      neo4j:
        condition: service_started

    ports:
      - "8000:8000"
    # Optional: if you have a .env in backend, you can uncomment:
    # env_file:
    #   - ./backend/.env
    # volume mount your backend code so changes reflect in container (dev mode)
    volumes:
      - ./backend:/app/backend

    # Command to run FastAPI
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000

volumes:
  postgres_data:
  neo4j_data:
